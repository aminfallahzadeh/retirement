import{dc as n,fU as r}from"./index-Celh3WKK.js";const i=n.injectEndpoints({endpoints:s=>({existPaySlip:s.query({query:({payType:e,currentYear:a,currentMonth:t})=>({url:`${r}/ExistPaySlip?payType=${e}&currentYear=${a}&currentMonth=${t}`})}),getPayList:s.query({query:({personID:e,currentYear:a,currentMonth:t,payType:u})=>{let y=`${r}/GetPayList?payType=${u}`;return e&&(y+=`&personID=${e}`),a&&(y+=`&currentYear=${a}`),t&&(y+=`&currentMonth=${t}`),{url:y}}}),getPay:s.query({query:({payID:e})=>({url:`${r}/GetPay?payID=${e}`})}),issuePay:s.mutation({query:({currentYear:e,currentMonth:a,requestID:t,payDate:u})=>({url:`${r}/IssuePayForMunicipality?currentYear=${e}&currentMonth=${a}&requestID=${t}&payDate=${u}`,method:"POST"})}),insertPay:s.mutation({query:({payDate:e,currentYear:a,currentMonth:t,requestID:u,personID:y})=>({url:`${r}/InsertSinglePayForMunicipality?payDate=${e}&currentYear=${a}&currentMonth=${t}&requestID=${u}&personID=${y}`,method:"POST"})}),removePayItem:s.mutation({query:({payItemID:e})=>({url:`${r}/RemovePayItem?payItemID=${e}`,method:"POST"})}),insertPayItem:s.mutation({query:e=>({url:`${r}/InsertPayItem`,method:"POST",body:e})}),insertPayExcel:s.mutation({query:({data:e,type:a})=>{let t;switch(a){case"C":t=`${r}/GetFinancialItemListFromExcel`;break;case"E":t=`${r}/GetFicheListFromExcel`;break;default:throw new Error(`Unsupported type: ${a}`)}return{url:t,method:"POST",body:e}}})})}),{useLazyExistPaySlipQuery:P,useLazyGetPayListQuery:$,useGetPayListQuery:m,useGetPayQuery:c,useIssuePayMutation:p,useInsertPayMutation:I,useRemovePayItemMutation:l,useInsertPayItemMutation:q,useInsertPayExcelMutation:h}=i;export{c as a,l as b,P as c,$ as d,p as e,I as f,h as g,m as h,q as u};
